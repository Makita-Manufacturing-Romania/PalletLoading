@model PalletLoading.Models.PaginatedList<PalletLoading.Models.Container>
@inject PalletLoading.Data.PalletLoadingContext _context;

@{
    ViewData["Title"] = "Container list";
}
<h1>Container list</h1>


<link rel="stylesheet" href="~/css/background.css" />

<style>
    #searchBtn {
        transition: transform 0.2s ease-out;
    }

        #searchBtn:active {
            transform: scale(0.95);
        }



    .loadingScreen {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: black;
        opacity: 0.9;
        z-index: 9999;
    }

    .lds-ring {
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .lds-ring div {
            box-sizing: border-box;
            display: block;
            position: absolute;
            width: 350px;
            height: 350px;
            margin: 30px;
            border: 30px solid #fff;
            border-radius: 50%;
            animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
            border-color: #fff transparent transparent transparent;
        }

            .lds-ring div:nth-child(1) {
                animation-delay: -0.45s;
            }

            .lds-ring div:nth-child(2) {
                animation-delay: -0.3s;
            }

            .lds-ring div:nth-child(3) {
                animation-delay: -0.15s;
            }

    @@keyframes lds-ring {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }


    .btn-special {
        background-color: #B82E00;
        margin-bottom:5px;
    }

    .big-checkbox {
        width: 25px;
        height: 25px;
    }

</style>

<!-- Hidden field to store the buton ID's and other C# variables' -->
<input type="hidden" id="indexParam1" name="indexParam1" value="@ViewBag.indexParam1" />
<input type="hidden" id="indexParam2" name="indexParam2" value="@ViewBag.indexParam2" />
<input type="hidden" id="indexParam3" name="indexParam3" value="@ViewBag.indexParam3" />
<input type="hidden" id="indexParam4" name="indexParam4" value="@ViewBag.indexParam4" />
<input type="hidden" id="indexParam5" name="indexParam5" value="@ViewBag.indexParam5" />
<input type="hidden" id="indexParam6" name="indexParam6" value="@ViewBag.indexParam6" />




<div style="display:flex; justify-content:space-between">
    @if (ViewBag.UserRightLevel > 0)
    {
        <p>
            <a asp-action="Create" class=" btn btn-success"> Add new container <i class="fas fa-plus" width="10px" heigth="10px" style="background-color:white; text-align:center; font-size:13px; padding:3px; border-radius:50%; color:forestgreen;"></i></a>
        </p>
    }

    @using (Html.BeginForm("Index", "Containers2", FormMethod.Get))
    {
        <p style="display:inline-block">
            @*@Html.TextBox("SearchString")*@<label>
                De la: <input type="text" class="form-control" style="display:inline;width:10vw;min-width:100px;" name="datetimepickerStartDate" id="datetimepickerStartDate" />

            </label>
            <label>

                Pana la: <input type="text" class="form-control" style="display:inline;width:10vw;min-width:100px;" name="datetimepickerEndDate" id="datetimepickerEndDate" />
            </label>
            <input type="text" class="form-control" style="display:inline;width:10vw;min-width:100px;" id="SearchString" name="SearchString" value="@ViewBag.currentSearch" />
            <input type="submit" id="searchBtn" onclick="redirectToContainers()" class="btn btn-special btn-danger" value="Search" />
            <input type="button" id="downloadBtn" class="btn btn-special btn-danger" value="Download" />
        </p>
    }
</div>




@{
    var prevDisabled = Model.PageIndex - 1 == 0 ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


<table class="table">
    <thead>
        <tr>
            <th style="text-align:center; vertical-align:middle;">
                Name
            </th>
            <th style="text-align:center; vertical-align:middle;">
                Date
            </th>
            <th style="text-align:center; vertical-align:middle;">
                Type
            </th>
            <th style="text-align:center; vertical-align:middle;">
                Country
            </th>
            <th style="text-align:center; vertical-align:middle;">
                Volume (mc3)
            </th>
            <th style="width:150px; text-align:center; vertical-align:middle;">
                Actions
            </th>
            <th style="width:50px; text-align:center; vertical-align:middle;">
                Manager Approval
            </th>
            <th style="width:200px; text-align:center; vertical-align:middle;">
                Information Check
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var container in Model)
        {
            <tr>
                <td style="text-align:center; vertical-align:middle;">
                    @if (container.ContainerAT != null)
                    {
                        var listNames = new List<String>();
                        @foreach (var containerName in container.ContainerAT)
                        {
                            listNames.Add(containerName.ContainerName);
                        }
                        var templistContainer = String.Join(", ", listNames);
                        @:@templistContainer
                    }


                </td>
                <td style="text-align:center; vertical-align:middle;">

                    @Html.DisplayFor(modelItem => container.CreatedDate)
                </td>
                <td style="text-align:center; vertical-align:middle;">

                    @Html.DisplayFor(modelItem => container.Type.Name)
                </td>
                <td style="text-align:center; vertical-align:middle;">
                    @if (container.ContainerAT != null)
                    {
                        var listNames = new List<String>();
                        @foreach (var containerName in container.ContainerAT)
                        {
                            listNames.Add(containerName.Country.Name);
                        }
                        var templistContainer = String.Join(", ", listNames);
                        @:@templistContainer
                    }
                </td>
                <td style="text-align:center; vertical-align:middle;">
                    @{
                        decimal volumTotal = 0;
                        var tempPID = container.Pallets.Where(c => c.PalletImportData != null && c.PalletImportData.serial_from != 0).Sum(c => c.PalletImportData.volume * c.PalletImportData.picking_qty);
                        var tempPIDH = container.Pallets.Where(c => c.PalletImportDataHistory != null && c.PalletImportDataHistory.serial_from != 0).Sum(c => c.PalletImportDataHistory.volume * c.PalletImportDataHistory.picking_qty);
                        var tempPIDHPC = container.Pallets.Where(c => c.PalletImportDataHistory != null && c.PalletImportDataHistory.serial_from == 0)
                        .Join(_context.PartCenterPallets, c => c.PalletImportDataHistory.id, c => c.ImportDataHistoryId, (c, d) => new { ImportData = c, PartCenterPallets = d })
                        .Sum(c => c.PartCenterPallets.Volume);
                        var tempPIDPC = container.Pallets.Where(c => c.PalletImportData != null && c.PalletImportData.serial_from == 0)
                        .Join(_context.PartCenterPallets, c => c.PalletImportData.id, c => c.ImportDataId, (c, d) => new { ImportData = c, PartCenterPallets = d })
                        .Sum(c => c.PartCenterPallets.Volume);
                        volumTotal = tempPID + tempPIDH + tempPIDHPC + tempPIDPC;
                        //foreach (var tempPal in container.Pallets)
                        //{

                        //    if (tempPal.PalletImportData != null)
                        //    {
                        //        if (tempPal.PalletImportData.serial_from == 0)
                        //        {
                        //            volumTotal += _context.PartCenterPallets.Where(c => c.Container_no == tempPal.PalletImportData.container_no && c.Destination == tempPal.PalletImportData.consignee_code && c.Pallet_number == tempPal.PalletImportData.pallet_no).Select(c => c.Volume).FirstOrDefault();
                        //        }
                        //        else
                        //        {
                        //            volumTotal += (tempPal.PalletImportData.volume * tempPal.PalletImportData.picking_qty);
                        //        }
                        //    }
                        //    else if (tempPal.PalletImportDataHistory != null)
                        //    {
                        //        if (tempPal.PalletImportDataHistory.serial_from == 0)
                        //        {
                        //            volumTotal += _context.PartCenterPallets.Where(c => c.Container_no == tempPal.PalletImportDataHistory.container_no && c.Destination == tempPal.PalletImportDataHistory.consignee_code && c.Pallet_number == tempPal.PalletImportDataHistory.pallet_no).Select(c => c.Volume).FirstOrDefault();
                        //        }
                        //        else
                        //        {
                        //            volumTotal += (tempPal.PalletImportDataHistory.volume * tempPal.PalletImportDataHistory.picking_qty);
                        //        }
                        //    }
                        //}
                    }
                    @(volumTotal.ToString("N2") +"/" +container.Type.volume.ToString("N2")+" ("+ (volumTotal*100 / container.Type.volume).ToString("N2") + "%)")
                </td>
                @if (ViewBag.UserRightLevel > 0)
                {
                    <td style="width:200px;text-align:center; vertical-align:middle;">
                        <a class="btn btn-info" asp-action="Details" asp-route-id="@container.Id">Details</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@container.Id">Delete</a>
                    </td>
                    @if (string.IsNullOrEmpty(container.approval_Name))
                    {
                        <td style="text-align:center; vertical-align:middle;">
                            @if (container.dataCheck == true && container.signatureCheck == true && container.fileCheck == true)
                            {
                                if (ViewBag.Role >= 5)
                                {
                                    <input type="checkbox" class="row-checkbox big-checkbox" style="margin-top:6px;font-size:3vh;" data-id="@container.Id" />
                                }
                                else
                                {
                                    <i class="fas fa-exclamation" style="font-size:3vh;"></i>
                                }
                            }
                        </td>
                        <td style="text-align:center; vertical-align:middle;">
                            @if (container.dataCheck == false)
                            {
                                <i class="fas fa-database" style="margin-right:20px;font-size:3vh;"></i>
                            }
                            @if (container.signatureCheck == false)
                            {
                                <i class="fas fa-clipboard-list" style="margin-right:20px;font-size:3vh;"></i>
                            }
                            @if (container.fileCheck == false)
                            {
                                <i class="fas fa-file-archive" style="font-size:3vh;"></i>
                            }
                        </td>
                    }
                    else
                    {
                        <td style="width:100px;text-align:center; vertical-align:middle;">
                             <i class="fas fa-check" style="font-size:3vh;"></i> 
                        </td>
                        <td style="text-align:center; vertical-align:middle;">
                        </td>
                    }
                }
                else
                {
                    <td style="width:150px; style=" text-align:center; vertical-align:middle;"">
                        <a asp-action="Details" asp-route-id="@container.Id">Details</a>
                    </td>
                }
            </tr>
        }
        <tr>
            <td colspan="4">

                <a asp-action="Index"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-datetimepickerEndDate="@(Model.PageIndex - 1)"
                   class=" @prevDisabled btn btn-secondary"
                   id="prevBtn"
                   onclick="redirectToContainers()">
                    Previous
                </a>

                <input style="width:50px;" type="text" id="pageText" value="@Model.PageIndex" />
                / @Model.TotalPages
                <input type="button" value="Go to" onclick="redirectToContainers()" id="btnGoTo" />


                <a asp-action="Index"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   class=" @nextDisabled btn btn-secondary"
                   id="nextBtn"
                   onclick="redirectToContainers()">
                    Next
                </a>
            </td>
            <td colspan="2"></td>
                @*  <div style="margin-left:344px"> *@
                @*     <input type="checkbox" class="row-checkbox big-checkbox" style="margin-left:560px; font-size:3vh; vertical-align:central" id="master"> *@
                @if (ViewBag.Role >= 5)
                {
                <td style="width:100px;text-align:center; vertical-align:middle;">
                    <input type="checkbox" id="select-all" class="big-checkbox" style="margin-top:6px;font-size:3vh;" />
                    </td>
                <td style="text-align:center; vertical-align:middle;">
                    <button id="submit-changes" class="btn btn-primary">Manager Approval</button>
                    </td>
                }
                @*  </div> *@
        </tr>
    </tbody>
</table>




@section Scripts {
<link rel="stylesheet" href="~/jquery-ui-1.12.1/jquery-ui.css" />
<script src="~/jquery-ui-1.12.1/jquery-ui.js"></script>
<script>
    $(document).ready(function () {

            @{
                var startdate = DateTime.ParseExact( ViewBag.currentdatetimepickerStartDate.ToString(),"dd-MM-yyyy",null);
                var enddate = DateTime.ParseExact( ViewBag.currentdatetimepickerEndDate.ToString(),"dd-MM-yyyy",null);
            }


    $('#datetimepickerStartDate').datepicker({ dateFormat: 'dd-mm-yy' });
    $('#datetimepickerEndDate').datepicker({ dateFormat: 'dd-mm-yy' });
    var d_day = @startdate.Day  <10 ? "0" +@startdate.Day : @startdate.Day;
    var d_month =  @startdate.Month  <10 ? "0" +@startdate.Month : @startdate.Month;
    var d_year = @startdate.Year  <10 ? "0" +@startdate.Year : @startdate.Year;

    var todayDate = d_day + "-" + d_month + "-" + d_year;

    var d_day1 = @enddate.Day  <10 ? "0" +@enddate.Day : @enddate.Day;
    var d_month1 = @enddate.Month  <10 ? "0" +@enddate.Month : @enddate.Month;
    var d_year1 = @enddate.Year  <10 ? "0" +@enddate.Year : @enddate.Year;

    var todayDate1 = d_day1 + "-" + d_month1 + "-" + d_year1;


        console.log(d_day + "-" + d_month + "-" + d_year)
    $("#datetimepickerStartDate").ready(function () {
        $("#datetimepickerStartDate").val(todayDate)
    })
    $("#datetimepickerEndtDate").ready(function () {
        $("#datetimepickerEndDate").val(todayDate1)
    })

        //$('#send').click(function () {
        //    //var id = $('#userId').val(); chestia asta nu e necesara
        //    window.location.href = '@Url.Action("List_Confirmed")' /*+ "?id=" + id*/;
        //});
    });
    $("#downloadBtn").click(function(){
       var sDate = $('#datetimepickerStartDate').val();
        var eDate = $('#datetimepickerEndDate').val();
        var searchString = $('#SearchString').val();
        var locationUrl ='@Url.Action("GetExcel", "Containers2")' + "?sdate=" + sDate + "&edate=" + eDate + "&searchString=" + searchString ;
        window.location.href = locationUrl

    });
    $("#nextBtn").click(function(){
        var sDate = $('#datetimepickerStartDate').val();
        var eDate = $('#datetimepickerEndDate').val();
        var searchString = $('#SearchString').val();
        var pageNumber= (@Model.PageIndex + 1);
        var locationUrl ='@Url.Action("Index", "Containers2")' + "?datetimepickerStartDate=" + sDate + "&datetimepickerEndDate=" + eDate + "&searchString=" + searchString + "&pageNumber=" + pageNumber ;
        window.location.href = locationUrl
        return false;
    })

    $("#prevBtn").click(function(){
        var sDate = $('#datetimepickerStartDate').val();
        var eDate = $('#datetimepickerEndDate').val();
        var searchString = $('#SearchString').val();
        var pageNumber= (@Model.PageIndex - 1);
        var locationUrl ='@Url.Action("Index", "Containers2")' + "?datetimepickerStartDate=" + sDate + "&datetimepickerEndDate=" + eDate + "&searchString=" + searchString + "&pageNumber=" + pageNumber ;
        window.location.href = locationUrl
        return false;
    })

    $('#btnGoTo').click(function () {
        var pageNum = $('#pageText').val();
        var sDate = '@ViewBag.currentdatetimepickerStartDate'
        var eDate = '@ViewBag.currentdatetimepickerEndDate'
        var searchString = $('#SearchString').val();
        var locationUrl ='@Url.Action("Index", "Containers2")' + "?datetimepickerStartDate=" + sDate + "&datetimepickerEndDate=" + eDate + "&searchString=" + searchString + "&pageNumber=" + pageNum ;
        window.location.href = locationUrl
        return false;
     })


        function redirectToContainers() {
            document.querySelector('.loadingScreen').style.display = 'block';
        }


        //manually sign checked items as manager
        $(document).ready(function () {
            var checkedIds = [];

            $('.row-checkbox').change(function () {
                var id = $(this).data('id');
                if ($(this).is(':checked')) {
                    checkedIds.push(id);
                } else {
                    checkedIds = checkedIds.filter(function (item) {
                        return item !== id;
                    });
                }
            });

            var indexParam1 = $("#indexParam1").val();
            var indexParam2 = $("#indexParam2").val();
            var indexParam3 = $("#indexParam3").val();
            var indexParam4 = $("#indexParam4").val();
            var indexParam5 = $("#indexParam5").val();
            var indexParam6 = $("#indexParam6").val();


            $('#submit-changes').click(function () {
                document.querySelector('.loadingScreen').style.display = 'block';
                $.ajax({
                    url: '/Containers2/ManagerBulkSign',
                    type: 'POST',
                    data: { ids: checkedIds, searchString: indexParam1, pageNumber: indexParam2, currentdatetimepickerStartDate: indexParam3, currentdatetimepickerEndDate: indexParam4,
                         datetimepickerStartDate: indexParam5, datetimepickerEndDate: indexParam6 },
                    success: function () {
                         window.location.href = '/Containers2/Index?searchString=' + indexParam1 + '&pageNumber=' + indexParam2 + '&currentdatetimepickerStartDate=' + indexParam3 + '&currentdatetimepickerEndDate=' + indexParam4
                             + '&datetimepickerStartDate=' + indexParam5 + '&datetimepickerEndDate=' + indexParam6;

                        // alert('Changes submitted successfully!');
                    }
                });
            });
        });

        //check all
        $('#select-all').change(function () {
            var isChecked = $(this).is(':checked');
            $('.row-checkbox').prop('checked', isChecked).change();
        });


</script>
}