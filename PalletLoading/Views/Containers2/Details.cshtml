@model PalletLoading.ViewModels.ContainerDetailsViewModel
@inject PalletLoading.Data.PalletLoadingContext _context;

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout_Full.cshtml";
    var templistContainer = "";

    var volumeTotal = Model.Type.volume;

    var anyPallets = Model.Pallets.Any(c => c.PalletImportData != null);
    var anyPalletsHistory = Model.Pallets.Any(c => c.PalletImportDataHistory != null);
    decimal volumePallets = 0.00M;
    var tempSumPcPalletVolume = Model.ModelImportDataPccPallets.Where(c => c.PartCenterPallets != null).Sum(c => c.PartCenterPallets.Volume);
    var tempSum = Model.ModelImportDataPccPallets.Where(c => c.pallet.PalletImportData != null).Sum(c => c.pallet.PalletImportData.volume * c.pallet.PalletImportData.picking_qty);
    var tempSumPcPalletVolumeHistory = Model.ModelImportDataPccPallets.Where(c => c.PartCenterPalletsHistory != null).Sum(c => c.PartCenterPalletsHistory.Volume);
    var tempSumHistory = Model.ModelImportDataPccPallets.Where(c => c.pallet.PalletImportDataHistory != null).Sum(c => c.pallet.PalletImportDataHistory.volume * c.pallet.PalletImportDataHistory.picking_qty);

    volumePallets = tempSumPcPalletVolume + tempSumPcPalletVolumeHistory + tempSumHistory + tempSum;
    //if (anyPallets)
    //{
    //{
    //    try
    //    {
    //        volumePallets = Model.Pallets.Sum(c => c.PalletImportData.volume);

    //    }
    //    catch (Exception e)
    //    {

    //    }
    //}
    //else
    //{
    //    try
    //    {
    //        volumePallets = Model.Pallets.Sum(c => c.PalletImportDataHistory.volume);
    //    }
    //    catch (Exception e)
    //    {

    //    }

            //}
}

<link rel="stylesheet" href="~/css/background.css" />

@if (@ViewBag.typeOfOperation == "edit")
{
    @if (@Model.UploadModel.Count == 0)
    {
        <script>
            var value = 0;
            var tbl;
            var tbf;
        </script>
    }
    else
    {
        <script>
            var value = @Model.UploadModel.Count;
            var tbl;
            var tbf;
        </script>
    }
}
else
{
    <script>
        var value = 0;
        var tbl;
        var tbf;
    </script>
}


<!-- Hidden field to store the buton ID's and other C# variables' -->
<input type="hidden" id="containerId" name="containerId" value="@ViewBag.containerId" />
<input type="hidden" id="selectedLoadType" name="selectedLoadType" value="@ViewBag.selectedLoadType" />
@* <input type="hidden" id="formTypeId" name="formTypeId" value="@ViewBag.formTypeId" /> *@

<style>
    .detailsBtn:focus {
        outline: 0 !important;
        box-shadow: none !important;
        background-color: darkseagreen;
        border-color: darkseagreen;
    }

    .detailsBtn:active {
        box-shadow: none !important;
        outline: 0 !important;
    }


    .modalClassSecuringLoad {
        padding-right: 30px;
    }

    
    .confirmData {
        background-color: green;
        
    }

    .emptyData {
        background-color: blue;
        
    }

    .exportClass {
        background-color: darkorange;
        border-radius: 5px;
        color: white;
    }

    .errorData {
        background-color: darkred;
        color: white;
    }

    .modifyClass {
        background-color: green;
        border-radius: 5px;
        color: white;
    }

    .previewClass {
        background-color: darkcyan;
        border-radius: 5px;
        color: white;
    }

    .btn-primary-new {
        background-color: #0D6EFD;
        border-radius:5px;
        border-color: rgba(0, 0, 0, 0);
        color: white;
        font-size: 20px;
        padding: 0.375rem 0.75rem;
    }

    .btn-primary-new:hover {
        color: black;
    }

    .btn-primary-confirm {
        background-color: #198754;
        border-radius: 5px;
        border-color: rgba(0, 0, 0, 0);
        color: white;
        font-size: 20px;
    }

    .btn-primary-confirm:hover {
        color: black;
    }

    .btn-padding1 {
        padding: 0.375rem 0.75rem;
    }

    .btn-padding2 {
        padding: 0.5rem 0.75rem;
    }



    .AddButtonFiles {
        color: #ffff;
        background-color: #424242;
        width: 100%;
        height: 100%;
        font-size: 91px;
        max-width: 160px;
        max-height: 140px;
        text-align: center;
        border-radius: 5px 5px 5px 5px;
        margin: 5px;
    }

    .HrFiles {
        /*color: #ffff;
        background-color: #424242;
        width: 50%;
        max-width: 200px;
        text-align: center;
        */
        background-color: white;
        border-radius: 12px 12px 12px 12px;
        margin: 5px;
        border-width: 1px;
    }

    .LabelFiles {
        color: #fff;
        width: 70%;
        text-align: center;
        flex-direction: column;
        border-radius: 5px 5px 5px 5px;
        padding: 0.375rem 0.75rem;
        margin: 5px;
        border: 1px solid transparent;
    }

        .LabelFiles:focus {
            outline: none !important;
            box-shadow: 0 0 0px 0px #044d55 !important;
            border-width: 0px;
        }

        .LabelFiles:hover {
            color: deepskyblue;
        }


    .btn-Reject {
        color: #ffff;
        background-color: #c40e0e !important;
        width: 100%;
        max-width: 200px;
        text-align: center;
        border-radius: 5px 5px 5px 5px;
        margin: 5px;
        max-height: 30px;
        text-decoration: none;
        line-height: 1.2;
        padding: 0.375rem 0.75rem;
        border-width: 0px;
        border: 0px solid;
    }

        .btn-Reject:active:focus {
            color: #ffff;
            background-color: #991414;
            outline: none !important;
            box-shadow: 0 0 1px 1px #991414 !important;
            border-width: 1px;
        }

        .btn-Reject:hover {
            color: #ffff;
            background-color: #991414;
        }

        .btn-Reject:focus {
            color: #ffff;
            background-color: #991414;
        }


    .btnBlackOwn {
        color: #ffff;
        background-color: #0ec40e !important;
        width: 100%;
        max-width: 200px;
        text-align: center;
        border-radius: 5px 5px 5px 5px;
        margin: 5px;
        max-height: 30px;
        text-decoration: none;
        line-height: 1.2;
        padding: 0.375rem 0.75rem;
        border-width: 0px;
        border: 0px solid;
    }

        .btnBlackOwn:active:focus {
            color: #ffff;
            background-color: #149914;
            outline: none !important;
            box-shadow: 0 0 1px 1px #149914 !important;
            border-width: 1px;
        }

        .btnBlackOwn:hover {
            color: #ffff;
            background-color: #149914;
        }

        .btnBlackOwn:focus {
            color: #ffff;
            background-color: #149914;
        }


    

    .addListFiles {
        /*color: #ffff;
        background-color: #424242;
        width: 50%;
        max-width: 200px;
        text-align: center;
        */
        background-color: #424242;
        border-radius: 12px 12px 12px 12px;
        width: 100%;
        height: 100%;
        max-height: 200px;
        overflow-y: auto;
        overflow-x: hidden;
        min-height: 150px;
        margin: 5px;
    }


</style>


@if (Model.Container.ContainerAT != null)
{
    var listNames = new List<String>();
    @foreach (var containerName in Model.Container.ContainerAT)
    {
        listNames.Add(containerName.ContainerName);
    }
    templistContainer = String.Join(", ", listNames);
}
<div width="100%;" align="center" style="padding:0; display:flex; align-items:center; justify-content: center;">
    <div style="position:relative;">

        <p style="padding:0; display:inline-block; font-weight:bold; font-size:25px; position:relative;top:7px;">Details - @templistContainer  </p>
    </div>
</div>
<div width="100%" align="center" style="margin-bottom:10px;">
    @if (ViewBag.UserRightLevel > 0)
    {
        <a class="modifyClass btn-padding1" type="button" asp-action="Create" asp-controller="Pallets" asp-route-id="@Model.Container.Id">Modify</a>
    }
   @*  <a type="button" asp-action="GeneratePDF" asp-controller="Containers2" asp-route-id="@Model.Container.Id" target="_blank" class="btn btn-danger">Export PDF</a>
 *@
    @if (ViewBag.ExportPDFConfirmation == true)
    {
        <a class="previewClass btn-padding1" type="button" asp-action="GeneratePDFNew" asp-controller="Containers2" asp-route-id="@Model.Container.Id" asp-route-actionType="Preview" target="_blank">Preview PDF</a>
        <a class="exportClass btn-padding1" type="button" asp-action="GeneratePDFNew" asp-controller="Containers2" asp-route-id="@Model.Container.Id" asp-route-actionType="Download" target="_blank">Download PDF</a>
    }


    @*<h1 style="text-align:center">Details - <a class="nav-link text-dark" asp-area="" asp-controller="CMR" asp-action="Index">@Model.Container.Name</a></h1>*@
    <input type="hidden" value="@Model.Container.Id" id="container" />
    @*<div>
        <div align="center" style="padding:50px 300px 50px 300px">
        <div align="left">
        @Html.DisplayNameFor(model => Model.Type.Name)
        <span style="float:right">
        @Html.DisplayFor(model => Model.Type.Name)
        </span>
        </div>

        <div align="left">
        Country
        <span style="float:right">
        @Html.DisplayFor(model => Model.Country.Name)
        </span>
        </div>
        </div>
        </div>*@
    @if (Model.Container.ContainerAT != null)
    {
        var listNames = new List<String>();
        @foreach (var containerName in Model.Container.ContainerAT)
        {
            listNames.Add(containerName.Country.Name);
        }
        templistContainer = String.Join(", ", listNames);
    }

    <div class="container" style="margin-top:10px">
        <div class="row">
            <div class="col-6" align="right" style="font-weight:bold;">
                @Html.DisplayNameFor(model => Model.Type.Name)
            </div>
            <div class="col-6" align="left">
                @Html.DisplayFor(model => Model.Type.Name)
            </div>
        </div>
        <div class="row">
            <div class="col-6" align="right" style="font-weight:bold;">
                Country
            </div>

            <div class="col-6" align="left">
                @templistContainer
            </div>
        </div>
        <div class="row">
            <div class="col-6" align="right" style="font-weight:bold;">
                Volume (mc3)
            </div>

            <div class="col-6" align="left">
                @volumePallets.ToString("N2") (m3) / @volumeTotal.ToString("N2") (m3)
            </div>
        </div>
    </div>

    <br />
    <div class="mb-2 mr-2" style="float:right">
    </div>


    @{
        var lengthContainer = Model.Container.NoOfColumns;
        var widthContainer = Model.Container.NoOfRows;
        var totalLayer = lengthContainer * widthContainer;
        var palletsAux = Model.Pallets;
    }

    <br />



    @*@{Html.BeginForm("CreateDocument", "Containers2", FormMethod.Get);
        {
        <div>
        <input type="button" value="Export PDF" style="width:150px;height:27px" />
        </div>
        }
        Html.EndForm();
        }*@
    <div style="width:100%; padding-bottom:120px; overflow-x:auto; position:relative;">
        <img src="~/unnamed2.png" style="position:absolute; z-index:-1; bottom:0;left:0;" min-width="900px" width="1800px" />
        <table border="1" class="table-bordered" style="border:2px solid; border-right-style:dotted; max-width:1106px; margin-left:370px; float:left;  text-align: center; align-content: center;">
            <tbody>
                @{
                    var colNo = 1;
                    var currentRow = 1;
                                @for (int row = 0; row < widthContainer; row++)
                    {
                                    <tr style="vertical-align: top;">
                                        @for (int col = 0; col < lengthContainer; col++)
                            {
                                string idPallet = row.ToString() + "," + col.ToString();
                                var currentPallets = palletsAux.Where(x => x.Row == row && x.Column == col).OrderByDescending(x => x.OrderNo);

                                if (currentPallets != null)
                                {
                                                @if (currentPallets.Count() == 1 && currentRow == 1)
                                    {
                                                    <td style="width: 4vw; max-width: 4vw;min-width: 40px; text-align: center; position: relative; height:110px;">
                                                        @if (currentRow == 1)
                                            {
                                                            <p style="font-size:25px">@colNo</p>
                                                colNo++;
                                            }
                                                        @{
                                                var palet = currentPallets.First();

                                                if (palet.PalletImportData != null)
                                                {

                                                    if (palet.PalletImportData.serial_from == 0)
                                                    {
                                                        if (_context.PartCenterPallets.Any(c => /*c.Container_no == palet.PalletImportData.container_no &&*/ c.Destination == palet.PalletImportData.consignee_code && c.Pallet_number == palet.PalletImportData.pallet_no))
                                                        {
                                                                                    <div style="position: absolute; bottom: 0; width: 95%;">
                                                                                        <input type="button" data-volume="@_context.PartCenterPallets.Where(c=>/*c.Container_no == palet.PalletImportData.container_no &&*/ c.Destination == palet.PalletImportData.consignee_code && c.Pallet_number == palet.PalletImportData.pallet_no).Select(c=>c.Volume).FirstOrDefault()" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width:80%; margin-top:5px;min-width: 30px; min-height:40px; margin-bottom:5px; border-radius:5px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                                                    </div>

                                                        }
                                                        else
                                                        {
                                                                                    <div style="position: absolute; bottom: 0; width: 95%;">
                                                                                        <input type="button" data-volume="0" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width:80%; margin-top:5px;min-width: 30px; min-height:40px; margin-bottom:5px; border-radius:5px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                                                    </div>
                                                        }
                                                    }
                                                    else
                                                    {
                                                                                <div style="position: absolute; bottom: 0; width: 95%;">
                                                                                    <input type="button" data-volume="@palet.PalletImportData.volume" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width:80%; margin-top:5px;min-width: 30px; min-height:40px; margin-bottom:5px; border-radius:5px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                                                </div>
                                                    }


                                                }
                                                else if (palet.PalletImportDataHistory != null)
                                                {
                                                    if (palet.PalletImportDataHistory.serial_from == 0)
                                                    {
                                                        if (_context.PartCenterPallets.Any(c =>/* c.Container_no == palet.PalletImportDataHistory.container_no &&*/ c.Destination == palet.PalletImportDataHistory.consignee_code && c.Pallet_number == palet.PalletImportDataHistory.pallet_no))
                                                        {
                                                                                    <div style="position: absolute; bottom: 0; width: 95%;">

                                                                                        <input type="button" data-volume="@_context.PartCenterPallets.Where(c=>/*c.Container_no == palet.PalletImportDataHistory.container_no &&*/ c.Destination == palet.PalletImportDataHistory.consignee_code && c.Pallet_number == palet.PalletImportDataHistory.pallet_no).Select(c=>c.Volume).FirstOrDefault()" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" min-height:40px; style="width:3vw; margin-top:5px; margin-bottom:5px; border-radius:5px; min-width: 40px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                                                    </div>

                                                        }
                                                        else
                                                        {
                                                                                    <div style="position: absolute; bottom: 0; width: 95%;">

                                                                                        <input type="button" data-volume="0" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" min-height:40px; style="width:3vw; margin-top:5px; margin-bottom:5px; border-radius:5px; min-width: 40px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                                                    </div>

                                                        }
                                                    }
                                                    else
                                                    {
                                                                                <div style="position: absolute; bottom: 0; width: 95%;">

                                                                                    <input type="button" data-volume="0" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" min-height:40px; style="width:3vw; margin-top:5px; margin-bottom:5px; border-radius:5px; min-width: 40px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                                                </div>
                                                    }

                                                }
                                                else
                                                {
                                                                            <div style="position: absolute; bottom: 0; width: 95%;">
                                                                                <input type="button" data-volume="0" data-consignee="" data-container="" data-sales="" data-palletno="" data-serialto="" data-serialfrom="" id="@palet.Id" data-orderno="" data-qty="" data-weight="" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top: 5px;min-height:40px; margin-bottom: 5px; border-radius: 5px; height:6vh;text-align: center" class="detailsBtn btn-info">
                                                                            </div>
                                                }
                                                                        <br />
                                                        }
                                                    </td>
                                    }
                                                @*else if (currentPallets.Count() == 1)
                                        {
                                        <td style="width: 4vw; max-width: 4vw; text-align: center; position: relative; min-width: 40px; min-height: 4vw;">
                                        @if (currentRow == 1)
                                        {
                                        <p style="font-size:25px">@colNo</p>colNo++;
                                        }
                                        @{ var palet = currentPallets.First();

                                        if (palet.PalletImportData != null)
                                        {
                                        <div style="position: absolute; bottom: 0; width: 95%;">
                                        <input type="button" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width:80%; min-height:40px; min-width: 30px; margin-top:5px; margin-bottom:5px; border-radius:5px; height:3vw; text-align:center" class="detailsBtn btn-info">
                                        </div> }
                                        else if (palet.PalletImportDataHistory != null)
                                        {
                                        <div style="position: absolute; bottom: 0; width: 95%;">

                                        <input type="button" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" style="width:3vw; min-height:40px; margin-top:5px; margin-bottom:5px; min-width: 30px; border-radius:5px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                        </div>}
                                        else
                                        {
                                        <div style="position: absolute; bottom: 0; width: 95%;">
                                        <input type="button" data-consignee="" data-container="" data-sales="" data-palletno="" data-serialto="" data-serialfrom="" id="@palet.Id" data-orderno="" data-qty="" data-weight="" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top: 5px; margin-bottom: 5px; border-radius: 5px; min-height:40px; height:6vh;text-align: center" class="detailsBtn btn-info">
                                        </div>
                                        }
                                        <br />
                                        }
                                        </td>


                                        }*@
                                    else
                                    {
                                                    <td style=" width:4vw; text-align:center; position:relative;height:75px; min-width: 40px;" align="center">
                                                        @if (currentRow == 1)
                                            {
                                                            <p style="font-size:25px;margin-bottom:0;">@colNo</p>
                                                colNo++;
                                            }

                                                        @foreach (var palet in currentPallets)
                                            {
                                                            <div style="height:7vh; min-height:55px; width:100%; "> </div>
                                            }
                                                        <div style="position:absolute; bottom:0; width:100%!important;" align="center">

                                                            @foreach (var palet in currentPallets)
                                                {
                                                    if (palet.PalletImportData != null)
                                                    {
                                                        if (palet.PalletImportData.serial_from == 0)
                                                        {
                                                            if (_context.PartCenterPallets.Any(c => /*c.Container_no == palet.PalletImportData.container_no &&*/ c.Destination == palet.PalletImportData.consignee_code && c.Pallet_number == palet.PalletImportData.pallet_no))
                                                            {
                                                                            <input type="button" data-volume="@_context.PartCenterPallets.Where(c=>/*c.Container_no == palet.PalletImportData.container_no &&*/ c.Destination == palet.PalletImportData.consignee_code && c.Pallet_number == palet.PalletImportData.pallet_no).Select(c=>c.Volume).FirstOrDefault()" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px;height:6vh;text-align:center" class="detailsBtn btn-info">

                                                            }
                                                            else
                                                            {
                                                                            <input type="button" data-volume="0" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px;height:6vh;text-align:center" class="detailsBtn btn-info">

                                                            }
                                                        }
                                                        else
                                                        {
                                                                        <input type="button" data-volume="@palet.PalletImportData.volume" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px;height:6vh;text-align:center" class="detailsBtn btn-info">

                                                        }
                                                    }
                                                    else if (palet.PalletImportDataHistory != null)
                                                    {
                                                        if (palet.PalletImportDataHistory.serial_from == 0)
                                                        {
                                                            if (_context.PartCenterPallets.Any(c => /*c.Container_no == palet.PalletImportDataHistory.container_no &&*/ c.Destination == palet.PalletImportDataHistory.consignee_code && c.Pallet_number == palet.PalletImportDataHistory.pallet_no))
                                                            {
                                                                            <input type="button" data-volume="@_context.PartCenterPallets.Where(c=>/*c.Container_no == palet.PalletImportDataHistory.container_no &&*/ c.Destination == palet.PalletImportDataHistory.consignee_code && c.Pallet_number == palet.PalletImportDataHistory.pallet_no).Select(c=>c.Volume).FirstOrDefault()" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px;height:6vh;text-align:center" class="detailsBtn btn-info">

                                                            }
                                                            else
                                                            {
                                                                            <input type="button" data-volume="0" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px;height:6vh;text-align:center" class="detailsBtn btn-info">


                                                            }
                                                        }
                                                        else
                                                        {
                                                                        <input type="button" data-volume="@palet.PalletImportDataHistory.volume" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px; height:6vh; text-align:center" class="detailsBtn btn-info">

                                                        }
                                                    }
                                                    else
                                                    {

                                                                    <input type="button" data-volume="" data-sales="" data-palletno="" data-serialto="" data-serialfrom="" id="@palet.Id" data-orderno="" data-qty="" data-weight="" value="@palet.OrderNo" style="width: 3vw; margin-top:5px; margin-bottom:5px; min-height:40px; border-radius:5px; height:6vh; min-width: 30px; text-align:center" class="detailsBtn btn-info">

                                                    }
                                                }
                                                        </div>

                                                    </td>
                                    }
                                }
                            }
                                        @{
                                currentRow++;
                                        }
                                    </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    @* New Modal Elements *@
    @if (ViewBag.UserRightLevel > 1)
    {
        <div style="display: flex; justify-content: center; gap: 20px;">
            @if (ViewBag.SecuringLoadConfirmation == 2)
            {
                <button type="button" class="btn-primary-confirm btn-padding1" onclick="ShowSecuringLoadModal()">
                    Change Secure Load
                </button>
            }
            else if (ViewBag.SecuringLoadConfirmation == 1)
            {
                <button type="button" class="btn-primary-new btn-padding1" onclick="ShowSecuringLoadModal()">
                    Change Secure Load
                </button>
            }
            <div>
                @if (ViewBag.LoadingTypeConfirmation == 2)
                {
                    <select name="loadingType" id="loadingType" class="btn-primary-confirm btn-padding2">
                        @foreach (var type in ViewBag.LoadingTypes)
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                }
                else if (ViewBag.LoadingTypeConfirmation == 1)
                {
                    <select name="loadingType" id="loadingType" class="btn-primary-new btn-padding2">
                        @foreach (var type in ViewBag.LoadingTypes)
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                }
            </div>
            @if (ViewBag.FormDefinitionConfirmation == 2)
            {
                <button type="button" class="btn-primary-confirm btn-padding1" onclick="ShowFormDefinitionModal()">
                    Change Form Definition
                </button>
            }
            else if (ViewBag.FormDefinitionConfirmation == 1)
            {
                <button type="button" class="btn-primary-new btn-padding1" onclick="ShowFormDefinitionModal()">
                    Change Form Definition
                </button>
            }
            @if (ViewBag.FormDataConfirmation == 2)
            {
                <button type="button" class="btn-primary-confirm btn-padding1" onclick="ShowFormDataModal()">
                    Edit Form Data
                </button>
            }
            else if (ViewBag.FormDataConfirmation == 1)
            {
                <button type="button" class="btn-primary-new btn-padding1" onclick="ShowFormDataModal()">
                    Edit Form Data
                </button>
            }
        </div>
    }
   
    <br />
    <div style="display: flex; justify-content: center; gap: 20px;">
        @if (ViewBag.IssuerSignatureValidation == 2)
        {
            <a class="btn-primary-confirm btn-padding1" type="button" asp-action="IssuerSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id">
                Issuer Signature
            </a>
        }
        else if (ViewBag.IssuerSignatureValidation == 1)
        {
            <a class="btn-primary-new btn-padding1" type="button" asp-action="IssuerSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id">
                Issuer Signature
            </a>
        }
        
        @if (ViewBag.TeamLeaderSignatureValidation == 2)
        {
            <a class="btn-primary-confirm btn-padding1" type="button" asp-action="TeamLeaderSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id">
                Team Leader Signature
            </a>
        }
        else if (ViewBag.TeamLeaderSignatureValidation == 1)
        {
            <a class="btn-primary-new btn-padding1" type="button" asp-action="TeamLeaderSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id">
                Team Leader Signature
            </a>
        }
        
        @if (ViewBag.SupervisorSignatureValidation == 2)
        {
            <a class="btn-primary-confirm btn-padding1" type="button" asp-action="SupervisorSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id">
                Supervisor Signature
            </a>
        }
        else if (ViewBag.SupervisorSignatureValidation == 1)
        {
            <a class="btn-primary-new btn-padding1" type="button" asp-action="SupervisorSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id">
                Supervisor Signature
            </a>
        }

        @if (ViewBag.ManagerSignatureValidation == 2)
        {
            <a class="btn-primary-confirm btn-padding1" type="button" asp-action="ManagerSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id">
                Manager Signature
            </a>
        }
        else if (ViewBag.ManagerSignatureValidation == 1)
        {
            <a class="btn-primary-new btn-padding1" type="button" asp-action="ManagerSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id">
                Manager Signature
            </a>
        }
    </div>


    <br />

    <br />


    <table class="table-bordered" border="1" width="50%" ; style="min-width:400px; box-shadow:0 10px 20px rgba(0,0,0,0.1), 0 6px 6px rgba(0,0,0,0.1); max-width:600px;  height:300px; border:2px solid" align="center">
        <tr style="background-color: antiquewhite; border:none; ">
            <td style="border:none;">

                <h3 style="text-align:center; background-color: antiquewhite; ">Pallet details</h3>

            </td>
        </tr>
        <tr style="border: none; ">
            <div align="center">
            <td style="background-color: antiquewhite; border:none;   text-align: center; padding: 50px 100px 50px 100px" id="palletContent">
                    @{
                        if (Model.Pallet != null)
                        {
                                    <div align="left">
                                            @Html.DisplayNameFor(model => model.Pallet.Name)
                                        <span style="float:right">@Html.DisplayFor(model => model.Pallet.Name)</span>
                                    </div>

                                    <br />

                                    <div align="left">
                                            @Html.DisplayNameFor(model => model.Pallet.OrderNo)
                                        <span style="float:right">@Html.DisplayFor(model => model.Pallet.OrderNo)</span>
                                    </div>
                        }
                    }
            </td>
</div>
        </tr>
    </table>
<br />


<br />
    @if (Model.Pallets != null)
    {

    <div width="100%">
        <h2 align="center">Pallets details</h2>
        <table class='table' style="width:80%;" align="center">
            <tr>
                <th>Loading no</th>
                <th>Container</th>
                <th>Pallet no</th>
                <th>Sales part</th>
                <th>Serial from</th>
                <th>Serial to</th>
                <th>Quantity</th>
                <th>Weight</th>
                <th>Volume (mc3)</th>
            </tr>
                @foreach (var pallet in Model.ModelImportDataPccPallets.OrderBy(c => c.pallet.OrderNo))
                {
                    if (pallet.pallet.PalletImportData != null)
                    {
                    <tr>
                        <td>@pallet.pallet.OrderNo</td>
                        <td>@pallet.pallet.PalletImportData.consignee_code - @pallet.pallet.PalletImportData.container_no</td>
                        <td>@pallet.pallet.PalletImportData.pallet_no.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportData.salse_part</td>
                        <td>@pallet.pallet.PalletImportData.serial_from.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportData.serial_to.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportData.picking_qty.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportData.weight.ToString("G29")</td>
                            @if (@pallet.pallet.PalletImportData.serial_from == 0)
                            {
                                @if (pallet.PartCenterPallets != null)
                                {
                                <td>@pallet.PartCenterPallets.Volume</td>
                                }
                                else
                                {
                                <td>0</td>
                                }
                            }
                            else
                            {
                            <td>@((pallet.pallet.PalletImportData.volume * pallet.pallet.PalletImportData.picking_qty).ToString("N2"))</td>

                            }

                    </tr>
                    }
                    else if (pallet.pallet.PalletImportDataHistory != null)
                    {
                    <tr>
                        <td>@pallet.pallet.OrderNo</td>
                        <td>@pallet.pallet.PalletImportDataHistory.consignee_code - @pallet.pallet.PalletImportDataHistory.container_no</td>
                        <td>@pallet.pallet.PalletImportDataHistory.pallet_no.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportDataHistory.salse_part</td>
                        <td>@pallet.pallet.PalletImportDataHistory.serial_from.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportDataHistory.serial_to.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportDataHistory.picking_qty.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportDataHistory.weight.ToString("G29")</td>
                            @if (pallet.pallet.PalletImportDataHistory.serial_from == 0)
                            {
                                @if (pallet.PartCenterPalletsHistory != null)
                                {
                                <td>@pallet.PartCenterPalletsHistory.Volume.ToString("G29")</td>
                                }
                                else
                                {
                                <td>0</td>
                                }
                            }
                            else
                            {
                            <td>@((pallet.pallet.PalletImportDataHistory.volume * pallet.pallet.PalletImportDataHistory.picking_qty).ToString("N2"))</td>

                            }

                    </tr>
                    }
                }
        </table>
    </div>

    <div class="modal fade modalClassSecuringLoad" id="selectSecuringLoadModal" role="dialog">
        <div class="modal-dialog" id="selectSecuringLoadModalDialog">
            <!-- Modal content from SelectSecuringLoadModal view-->
        </div>
    </div>

    <div class="modal fade modalClassFormDefinition" id="selectFormDefinitionModal" role="dialog">
        <div class="modal-dialog" id="selectFormDefinitionModalDialog">
            <!-- Modal content from SelectFormDefinitionModal view-->
        </div>
    </div>

    <div class="modal fade modalClassFormData" id="selectFormDataModal" role="dialog">
        <div class="modal-dialog" id="selectFormDataModalDialog">
            <!-- Modal content from SelectFormDataModal view-->
        </div>
    </div>

    }

    <!--HTML ELEMENT FOR FILE UPLOAD-->
<div class="row">
    <div class="col-sm-10">
        <div id="uploadLister" class="addListFiles">
                @if (@ViewBag.typeOfOperation == "edit")
                {
                    int a = 0;
                    @foreach (var item in Model.UploadModel)
                    {
                        string idInput = "myfile" + a.ToString();
                        string idLabel = "myfilelabel" + a.ToString();
                        string idRemove = "myfileremove" + a.ToString();
                    <div class="row">
                        <div class="col-sm-12">
                            <a class=" btn-Link-files btn" href="@Url.Action("Download", "Containers2", new { fileName = item.fileName, requestid = item.id, projectId=item.ContainerId})">@item.fileName <i class="bi bi-download"></i></a>
                            <input type="button" class="btn-Reject-files btn-Reject" value="Remove" onclick="deleteFileOnSv(this)" />
                            <input type="file" name="uploadfile" id="@idInput" style="display:none;" onchange="clickbtnadd(this)" />
                        </div>
                        <hr class="HrFiles">
                    </div>
                        a++;
                    }
                    string idInputLast = "myfile" + Model.UploadModel.Count.ToString();
                    string idLabelLast = "myfilelabel" + Model.UploadModel.Count.ToString();
                    string idRemoveLast = "myfileremove" + Model.UploadModel.Count.ToString();
                    string idhrLast = "myfilehr" + Model.UploadModel.Count.ToString();
                <div class="row">
                    <div class="col-sm-12">
                        <input type="file" name="uploadfile" id="@idInputLast" style="display:none;" onchange="clickbtnadd(this)" />
                        <label class="LabelFiles" style="display:none;" id="@idLabelLast">FileUploaded</label>
                        <input style="display:none;" id="@idRemoveLast" type="button" class="btn-Reject-files btn-Reject" value="Remove" onclick="deleteFiles(this)">
                    </div>
                    <hr id="@idhrLast" style="display:none;" class="HrFiles">
                </div>
                }
                else
                {
                <div class="row">
                    <div class="col-sm-12">
                        <input type="file" name="uploadfile" id="myfile0" style="display:none;" onchange="clickbtnadd(this)" />
                        <label class="LabelFiles" style="display:none;" id="myfilelabel0">FileUploaded</label>
                        <input style="display:none;" id="myfileremove0" type="button" class="btn-Reject-files btn-Reject" value="Remove" onclick="deleteFiles(this)">
                    </div>
                    <hr id="myfilehr0" style="display:none;" class="HrFiles">
                </div>
                }

        </div>
    </div>

    <div class="col-sm-2">
            @if (@ViewBag.typeOfOperation == "edit")
            {
                string idInputLast = "myfile" + Model.UploadModel.Count.ToString();
            <label id="button+" for="@idInputLast" class="AddButtonFiles">+</label>
            }
            else
            {
            <label id="button+" for="myfile0" class="AddButtonFiles">+</label>
            }
    </div>
</div>
<form id="emptyForm">

    <input id="btnSave" type="submit" value="Save" class="btn-Accept" />

</form>


@* MODAL FOR REMOVE UPLOADED FILES *@
<div class="modal" id="DeleteFileModal">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"></h5>
                <div class="col-12">
                    <div class="row">
                        <div class="col-sm-12">
                            <label>Do you want to Delete this File ?</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-2 spaceBetwenDivsSmallTop">
                    </div>
                    <div class="col-sm-4 spaceBetwenDivsSmallTop">
                        <button id="yesDelete" type="button" class="close btn-Reject" data-bs-dismiss="modal" aria-label="Close">
                            <span aria-hidden="false">Yes</span>
                        </button>
                    </div>
                    <div class="col-sm-4 spaceBetwenDivsSmallTop">
                        <button id="cancelDelete" type="button" class="close btnBlackOwn" data-bs-dismiss="modal" aria-label="Close">
                            <span aria-hidden="false">No</span>
                        </button>
                    </div>
                    <div class="col-sm-2 spaceBetwenDivsSmallTop">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



    @section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script>

        //Submit Button

        $('emptyForm').on('submit', function (event) {

            event.preventDefault();//nu merge
            //event.stopImmediatePropagation();
            var OriginalList = new Array();
            const originalDiv = document.getElementById("uploadLister");
            for (const child of originalDiv.children) {
                var dev = {};
                //dev.DeveloperName = child.innerText;
                const childid = child.children[0];
                var removed = "removed";
                if (childid == null) {
                    //alert("frist if");
                    dev = removed;
                    OriginalList.push(dev);
                }
                else {
                    const childSecound = childid.children[0];
                    if (childSecound == null) {
                        // alert("secound if");
                        dev = removed;
                        OriginalList.push(dev);
                    }
                    else {
                        if (childSecound.href == null) {

                            //alert("last  if");
                            dev = removed;
                            OriginalList.push(dev);
                        }
                        else {

                            dev = childSecound.href;
                            OriginalList.push(dev);
                            // alert("merge");
                            // alert(JSON.stringify(dev));
                        }
                    }
                }
            }




            var formData = new FormData(document.getElementById('emptyForm'));

            formData.append('ListofFiles', JSON.stringify(OriginalList));
            $.ajax
                ({
                    url: '@Url.Action("SubmitFiles", "Containers2")',
                    type: 'POST',
                    data: formData,
                    dataType: 'json',
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        //document.location.href = "/" + data;
                        //$('.loading').hide();
                        // Handle the response
                    },
                    error: function (error) {
                        $('.loading').hide();
                        // Handle errors
                    }
                });
        });

        </script>


    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>

    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
<script>

    // Wait for the document to be fully loaded
    document.addEventListener('DOMContentLoaded', function () {
        // Get the <select> element
        var selectElement = document.getElementById('loadingType');

        // Set the second option as selected (index 1)
        var selectedLoadType = $("#selectedLoadType");
        if (selectedLoadType == null)
        {
            //e null
        }
        else 
        {
                //nu e null
            if (selectElement != null) {
                selectElement.selectedIndex = selectedLoadType.val();
            }
        }
    });



    @*$(".detailsBtn").click(function () {
                                                                var palletId = this.id;
                                                                var idContainer = $('#container').val();
                                                                var path = '@Url.Action("Details")' + "?id=" + idContainer + "&pallet=" + palletId;
                                                                window.location.href = path;
                                                            });*@

        $("#exportPDF").click(function () {
            var idContainer = $('#container').val();
            var path = '@Url.Action("CreateDocument")' + "?idContainer=" + idContainer;
            window.location.href = path;
        });

        $(".detailsBtn").click(function () {
            var palletId = this.id;
            var tmpVolume = ($(this).attr("data-volume") * $(this).attr("data-qty")).toFixed(2);
            console.log($(this).attr("data-serialfrom") + " " + $(this).attr("data-volume"))
            if ($(this).attr("data-serialfrom") == "0.00") {
                tmpVolume = $(this).attr("data-volume");

            }

            var palletTxt = "<div align='left'> <span style='float:left;font-weight:bold;'>Loading no:</span> <span style='float: right'> " + $(this).attr("data-orderNo") + "</span></div ></br> "
                + "<div align='left'><span style='float:left;font-weight:bold;'> Container:</span> <span style='float: right'> " + $(this).attr("data-consignee") + ' - ' + $(this).attr("data-container") + "</span></div></br>"
                + "<div align='left'><span style='float:left;font-weight:bold;'> Sales part:</span> <span style='float: right'> " + $(this).attr("data-sales") + "</span></div></br>"
                + "<div align='left'> <span style='float:left;font-weight:bold;'>Pallet no:</span> <span style='float: right'> " + $(this).attr("data-palletno") + "</span></div ></br> "
                + "<div align='left'><span style='float:left;font-weight:bold;'> Serial from:</span> <span style='float: right'> " + $(this).attr("data-serialfrom") + "</span></div > </br>"
                + "<div align='left'> <span style='float:left;font-weight:bold;'>Serial to:</span> <span style='float: right'> " + $(this).attr("data-serialto") + "</span></div > </br>"
                + "<div align='left'><span style='float:left;font-weight:bold;'> Quantity: </span><span style='float: right'> " + $(this).attr("data-qty") + "</span></div ></br> "
                + "<div align='left'><span style='float:left;font-weight:bold;'> Weight: </span><span style='float: right'> " + $(this).attr("data-weight") + "</span></div > </br>"
                + "<div align='left'><span style='float:left;font-weight:bold;'> Volume: </span><span style='float: right'> " + tmpVolume + "</span></div > </br>"
            $("#palletContent").empty();
            $("#palletContent").append(palletTxt)
            //console.log($(this).attr("data-serialto"))
        });


        function ShowSecuringLoadModal(id) {
            // Construct the URL with the id parameter
            var containerId = $("#containerId").val();
            var url = "@Url.Action("ShowSelectSecuringLoadModal", "Containers2")" + "?id1=" + containerId;

            $.get(url, function (data) {
                $("#selectSecuringLoadModalDialog").html(data);
            });

            $("#selectSecuringLoadModal").modal("show");
        }



        //check if loading element was loaded
        var selectElementCheck = document.getElementById('loadingType');
        if (selectElementCheck != null) {
            // Handle dropdown change event
            document.getElementById('loadingType').addEventListener('change', function () {
                var selectedType = this.value;
                var containerId = $("#containerId").val();

                // Make an AJAX call to the controller function
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ChangeLoadingType", "Containers2")',
                    data: { containerId: containerId, selectedType: selectedType },
                    dataType: "json", // Expect JSON response
                    success: function (data) {
                        // Handle success (e.g., show a message)
                        //alert('Loading type saved successfully!');
                        window.location.href = '/Containers2/Details?id=' + containerId;
                    },
                    error: function () {
                        // Handle error (e.g., show an error message)
                        //alert('Error saving loading type.');
                    }
                });
            });
        }



        function ShowFormDefinitionModal(id) {
            // Construct the URL with the id parameter
            var containerId = $("#containerId").val();
            var url = "@Url.Action("ShowFormDefinitionModal", "Containers2")" + "?id1=" + containerId;

            $.get(url, function (data) {
                $("#selectFormDefinitionModalDialog").html(data);
            });

            $("#selectFormDefinitionModal").modal("show");
        }




        function ShowFormDataModal(id) {
            // Construct the URL with the id parameter
            var containerId = $("#containerId").val();
            var url = "@Url.Action("ShowFormDataModal", "Containers2")" + "?id1=" + containerId;

            $.get(url, function (data) {
                $("#selectFormDataModalDialog").html(data);
            });

            $("#selectFormDataModal").modal("show");
        }



        //Input File For Upload
        function clickbtnadd(el) {
            var string = "myfile" + value;
            var stringlabel = "myfilelabel" + value;
            var stringremove = "myfileremove" + value;
            var stringhr = "myfilehr" + value;
            let EstimatedInput = document.getElementById(string);
            if (EstimatedInput.files[0] == null) {
            } else {
                var filename = EstimatedInput.files[0].name;
                var myLabel = document.getElementById(stringlabel);
                myLabel.style.display = 'inline-flex'
                myLabel.innerHTML = filename;
                var myLabel = document.getElementById(stringremove);
                myLabel.style.display = 'inline-flex'
                var myhr = document.getElementById(stringhr);
                myhr.style.display = 'inline-flex'
                var buttonA = "button+";
                var buttonAdd = document.getElementById(buttonA);
                value = value + 1;
                var newstring = "myfile" + value;
                buttonAdd.setAttribute("for", newstring)
                const container = document.createElement('div');
                container.className = 'row';
                //col sm 6 div
                const colFile = document.createElement('div');
                colFile.className = 'col-sm-12';
                //input
                const fileInput = document.createElement('input');
                fileInput.type = 'file';
                fileInput.id = 'myfile' + value;
                fileInput.className = 'required btnBlackOwn';
                fileInput.setAttribute("style", "display:none;");
                fileInput.setAttribute('onclick', 'clickbtnadd(this)');
                fileInput.addEventListener('change', function (e) {
                    clickbtnadd(this);
                }, false);
                var labelCreated = document.createElement('label');
                labelCreated.id = 'myfilelabel' + value;
                labelCreated.setAttribute("style", "display:none;");
                labelCreated.className = "LabelFiles";
                var btn = document.createElement('input');
                btn.type = "button";
                btn.className = "btn-Reject-files btn-Reject";
                btn.value = "Remove";
                btn.id = 'myfileremove' + value;
                btn.setAttribute("style", "display:none;");
                btn.setAttribute('onclick', 'deleteFiles(this)');
                var hr = document.createElement('hr');
                hr.className = "HrFiles";
                hr.id = 'myfilehr' + value;
                hr.setAttribute("style", "display:none;");
                //append
                colFile.appendChild(fileInput);
                colFile.appendChild(labelCreated);
                colFile.appendChild(btn);
                //append div to row div
                container.appendChild(colFile);
                container.appendChild(hr);
                const element = document.getElementById("uploadLister");
                element.appendChild(container);
            }
        }

        //Remove Element From Upload List
        function deleteFileOnSv(el) {
            //delete row
            tbl = el.parentNode.parentNode;

            $('#DeleteFileModal').modal('show');
        }

        function deleteFiles(el) {


            // if (!confirm("Are you sure you want to delete?")) return;

            tbl = el.parentNode.parentNode;
            //delete row


            $('#DeleteFileModal').modal('show');
        }




        $("body").on("click", "#yesDelete", function () {
            //$('#form-modal').modal('hide');


            while (tbl.firstChild) {
                tbl.lastChild.value = "";
                tbl.removeChild(tbl.lastChild);
            }
            tbl.remove();

            $('#DeleteFileModal').modal('hide');
        });

</script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("form").submit(function () {

                var formData = new FormData(document.getElementById('emptyForm'));
                for (var ii = 0; ii < value; ii++) {
                    if ($('#myfile' + ii).length > 0) {
                        formData.append('file', document.getElementById('myfile' + ii).files[0]);
                    }
                }


                var OriginalList = new Array();
                const originalDiv = document.getElementById("uploadLister");
                for (const child of originalDiv.children) {
                    var dev = {};
                    //dev.DeveloperName = child.innerText;
                    const childid = child.children[0];
                    var removed = "removed";
                    if (childid == null) {
                        dev = removed;
                        OriginalList.push(dev);
                    }
                    else {
                        const childSecound = childid.children[0];
                        if (childSecound == null) {
                            dev = removed;
                            OriginalList.push(dev);
                        }
                        else {
                            if (childSecound.href == null) {

                                dev = removed;
                                OriginalList.push(dev);
                            }
                            else {

                                dev = childSecound.href;
                                OriginalList.push(dev);
                                //alert(JSON.stringify(dev));
                            }
                        }
                    }
                }

                var containerId = $("#containerId").val();
                formData.append('containerId', JSON.stringify(containerId));

                // alert(containerId);

                formData.append('ListofFiles', JSON.stringify(OriginalList));
                $.ajax({
                    url: '@Url.Action("SubmitFiles", "Containers2")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        return false;
                        //document.location.href = "/" + data;
                        //$('.loading').hide();
                        // Handle the response
                    },
                    error: function (error) {
                        $('.loading').hide();
                        // Handle errors
                    }
                });

            });
        });


    </script>




    }

