@model PalletLoading.ViewModels.ContainerDetailsViewModel
@inject PalletLoading.Data.PalletLoadingContext _context;

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout_Full.cshtml";
    var templistContainer = "";

    var volumeTotal = Model.Type.volume;

    var anyPallets = Model.Pallets.Any(c => c.PalletImportData != null);
    var anyPalletsHistory = Model.Pallets.Any(c => c.PalletImportDataHistory != null);
    decimal volumePallets = 0.00M;
    var tempSumPcPalletVolume = Model.ModelImportDataPccPallets.Where(c => c.PartCenterPallets != null).Sum(c => c.PartCenterPallets.Volume);
    var tempSum = Model.ModelImportDataPccPallets.Where(c => c.pallet.PalletImportData != null).Sum(c => c.pallet.PalletImportData.volume * c.pallet.PalletImportData.picking_qty);
    var tempSumPcPalletVolumeHistory = Model.ModelImportDataPccPallets.Where(c => c.PartCenterPalletsHistory != null).Sum(c => c.PartCenterPalletsHistory.Volume);
    var tempSumHistory = Model.ModelImportDataPccPallets.Where(c => c.pallet.PalletImportDataHistory != null).Sum(c => c.pallet.PalletImportDataHistory.volume * c.pallet.PalletImportDataHistory.picking_qty);

    volumePallets = tempSumPcPalletVolume + tempSumPcPalletVolumeHistory + tempSumHistory + tempSum;
    //if (anyPallets)
    //{
    //    try
    //    {
    //        volumePallets = Model.Pallets.Sum(c => c.PalletImportData.volume);

    //    }
    //    catch (Exception e)
    //    {

    //    }
    //}
    //else
    //{
    //    try
    //    {
    //        volumePallets = Model.Pallets.Sum(c => c.PalletImportDataHistory.volume);
    //    }
    //    catch (Exception e)
    //    {

    //    }

            //}
}

<link rel="stylesheet" href="~/css/background.css" />

<!-- Hidden field to store the buton ID's and other C# variables' -->
<input type="hidden" id="containerId" name="containerId" value="@ViewBag.containerId" />
<input type="hidden" id="selectedLoadType" name="selectedLoadType" value="@ViewBag.selectedLoadType" />
@* <input type="hidden" id="formTypeId" name="formTypeId" value="@ViewBag.formTypeId" /> *@

<style>
    .detailsBtn:focus {
        outline: 0 !important;
        box-shadow: none !important;
        background-color: darkseagreen;
        border-color: darkseagreen;
    }

    .detailsBtn:active {
        box-shadow: none !important;
        outline: 0 !important;
    }


    .modalClassSecuringLoad {
        padding-right: 30px;
    }


    .confirmData {
        background-color: green;
        color: white;
    }

    .previewClass {
        background-color: darkcyan;
        color: white;
    }

    .exportClass {
        background-color: darkorange;
        color: white;
    }

    .errorData {
        background-color: darkred;
        color: white;
    }

</style>


@if (Model.Container.ContainerAT != null)
{
    var listNames = new List<String>();
    @foreach (var containerName in Model.Container.ContainerAT)
    {
        listNames.Add(containerName.ContainerName);
    }
    templistContainer = String.Join(", ", listNames);
}
<div width="100%;" align="center" style="padding:0; display:flex; align-items:center; justify-content: center;">
    <div style="position:relative;">

        <p style="padding:0; display:inline-block; font-weight:bold; font-size:25px; position:relative;top:7px;">Details - @templistContainer  </p>
    </div>
</div>
<div width="100%" align="center" style="margin-bottom:10px;">
    @if (ViewBag.UserRightLevel > 0)
    {
        <a class="btn btn-success" asp-action="Create" asp-controller="Pallets" asp-route-id="@Model.Container.Id">Modify</a>
    }
   @*  <a type="button" asp-action="GeneratePDF" asp-controller="Containers2" asp-route-id="@Model.Container.Id" target="_blank" class="btn btn-danger">Export PDF</a>
 *@
    @if (ViewBag.ExportPDFConfirmation == true)
    {
        <a class="btn previewClass" type="button" asp-action="GeneratePDFNew" asp-controller="Containers2" asp-route-id="@Model.Container.Id" asp-route-actionType="Preview" target="_blank" class="btn btn-danger">Preview PDF</a>
        <a class="btn exportClass" type="button" asp-action="GeneratePDFNew" asp-controller="Containers2" asp-route-id="@Model.Container.Id" asp-route-actionType="Download" target="_blank" class="btn btn-danger">Download PDF</a>
    }


    @*<h1 style="text-align:center">Details - <a class="nav-link text-dark" asp-area="" asp-controller="CMR" asp-action="Index">@Model.Container.Name</a></h1>*@
    <input type="hidden" value="@Model.Container.Id" id="container" />
    @*<div>
        <div align="center" style="padding:50px 300px 50px 300px">
        <div align="left">
        @Html.DisplayNameFor(model => Model.Type.Name)
        <span style="float:right">
        @Html.DisplayFor(model => Model.Type.Name)
        </span>
        </div>

        <div align="left">
        Country
        <span style="float:right">
        @Html.DisplayFor(model => Model.Country.Name)
        </span>
        </div>
        </div>
        </div>*@
    @if (Model.Container.ContainerAT != null)
    {
        var listNames = new List<String>();
        @foreach (var containerName in Model.Container.ContainerAT)
        {
            listNames.Add(containerName.Country.Name);
        }
        templistContainer = String.Join(", ", listNames);
    }

    <div class="container" style="margin-top:10px">
        <div class="row">
            <div class="col-6" align="right" style="font-weight:bold;">
                @Html.DisplayNameFor(model => Model.Type.Name)
            </div>
            <div class="col-6" align="left">
                @Html.DisplayFor(model => Model.Type.Name)
            </div>
        </div>
        <div class="row">
            <div class="col-6" align="right" style="font-weight:bold;">
                Country
            </div>

            <div class="col-6" align="left">
                @templistContainer
            </div>
        </div>
        <div class="row">
            <div class="col-6" align="right" style="font-weight:bold;">
                Volume (mc3)
            </div>

            <div class="col-6" align="left">
                @volumePallets.ToString("N2") (m3) / @volumeTotal.ToString("N2") (m3)
            </div>
        </div>
    </div>

    <br />
    <div class="mb-2 mr-2" style="float:right">
    </div>


    @{
        var lengthContainer = Model.Container.NoOfColumns;
        var widthContainer = Model.Container.NoOfRows;
        var totalLayer = lengthContainer * widthContainer;
        var palletsAux = Model.Pallets;
    }

    <br />



    @*@{Html.BeginForm("CreateDocument", "Containers2", FormMethod.Get);
        {
        <div>
        <input type="button" value="Export PDF" style="width:150px;height:27px" />
        </div>
        }
        Html.EndForm();
        }*@
    <div style="width:100%; padding-bottom:120px; overflow-x:auto; position:relative;">
        <img src="~/unnamed2.png" style="position:absolute; z-index:-1; bottom:0;left:0;" min-width="900px" width="1800px" />
        <table border="1" class="table-bordered" style="border:2px solid; border-right-style:dotted; max-width:1106px; margin-left:370px; float:left;  text-align: center; align-content: center;">
            <tbody>
                @{
                    var colNo = 1;
                    var currentRow = 1;
                    @for (int row = 0; row < widthContainer; row++)
                    {
                        <tr style="vertical-align: top;">
                            @for (int col = 0; col < lengthContainer; col++)
                            {
                                string idPallet = row.ToString() + "," + col.ToString();
                                var currentPallets = palletsAux.Where(x => x.Row == row && x.Column == col).OrderByDescending(x => x.OrderNo);

                                if (currentPallets != null)
                                {
                                    @if (currentPallets.Count() == 1 && currentRow == 1)
                                    {
                                        <td style="width: 4vw; max-width: 4vw;min-width: 40px; text-align: center; position: relative; height:110px;">
                                            @if (currentRow == 1)
                                            {
                                                <p style="font-size:25px">@colNo</p>
                                                colNo++;
                                            }
                                            @{
                                                var palet = currentPallets.First();

                                                if (palet.PalletImportData != null)
                                                {

                                                    if (palet.PalletImportData.serial_from == 0)
                                                    {
                                                        if (_context.PartCenterPallets.Any(c => /*c.Container_no == palet.PalletImportData.container_no &&*/ c.Destination == palet.PalletImportData.consignee_code && c.Pallet_number == palet.PalletImportData.pallet_no))
                                                        {
                                                            <div style="position: absolute; bottom: 0; width: 95%;">
                                                                <input type="button" data-volume="@_context.PartCenterPallets.Where(c=>/*c.Container_no == palet.PalletImportData.container_no &&*/ c.Destination == palet.PalletImportData.consignee_code && c.Pallet_number == palet.PalletImportData.pallet_no).Select(c=>c.Volume).FirstOrDefault()" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width:80%; margin-top:5px;min-width: 30px; min-height:40px; margin-bottom:5px; border-radius:5px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                            </div>

                                                        }
                                                        else
                                                        {
                                                            <div style="position: absolute; bottom: 0; width: 95%;">
                                                                <input type="button" data-volume="0" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width:80%; margin-top:5px;min-width: 30px; min-height:40px; margin-bottom:5px; border-radius:5px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                            </div>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <div style="position: absolute; bottom: 0; width: 95%;">
                                                            <input type="button" data-volume="@palet.PalletImportData.volume" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width:80%; margin-top:5px;min-width: 30px; min-height:40px; margin-bottom:5px; border-radius:5px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                        </div>
                                                    }


                                                }
                                                else if (palet.PalletImportDataHistory != null)
                                                {
                                                    if (palet.PalletImportDataHistory.serial_from == 0)
                                                    {
                                                        if (_context.PartCenterPallets.Any(c =>/* c.Container_no == palet.PalletImportDataHistory.container_no &&*/ c.Destination == palet.PalletImportDataHistory.consignee_code && c.Pallet_number == palet.PalletImportDataHistory.pallet_no))
                                                        {
                                                            <div style="position: absolute; bottom: 0; width: 95%;">

                                                                <input type="button" data-volume="@_context.PartCenterPallets.Where(c=>/*c.Container_no == palet.PalletImportDataHistory.container_no &&*/ c.Destination == palet.PalletImportDataHistory.consignee_code && c.Pallet_number == palet.PalletImportDataHistory.pallet_no).Select(c=>c.Volume).FirstOrDefault()" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" min-height:40px; style="width:3vw; margin-top:5px; margin-bottom:5px; border-radius:5px; min-width: 40px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                            </div>

                                                        }
                                                        else
                                                        {
                                                            <div style="position: absolute; bottom: 0; width: 95%;">

                                                                <input type="button" data-volume="0" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" min-height:40px; style="width:3vw; margin-top:5px; margin-bottom:5px; border-radius:5px; min-width: 40px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                            </div>

                                                        }
                                                    }
                                                    else
                                                    {
                                                        <div style="position: absolute; bottom: 0; width: 95%;">

                                                            <input type="button" data-volume="0" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" min-height:40px; style="width:3vw; margin-top:5px; margin-bottom:5px; border-radius:5px; min-width: 40px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                                        </div>
                                                    }

                                                }
                                                else
                                                {
                                                    <div style="position: absolute; bottom: 0; width: 95%;">
                                                        <input type="button" data-volume="0" data-consignee="" data-container="" data-sales="" data-palletno="" data-serialto="" data-serialfrom="" id="@palet.Id" data-orderno="" data-qty="" data-weight="" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top: 5px;min-height:40px; margin-bottom: 5px; border-radius: 5px; height:6vh;text-align: center" class="detailsBtn btn-info">
                                                    </div>
                                                }
                                                <br />
                                            }
                                        </td>
                                    }
                                    @*else if (currentPallets.Count() == 1)
                                        {
                                        <td style="width: 4vw; max-width: 4vw; text-align: center; position: relative; min-width: 40px; min-height: 4vw;">
                                        @if (currentRow == 1)
                                        {
                                        <p style="font-size:25px">@colNo</p>colNo++;
                                        }
                                        @{ var palet = currentPallets.First();

                                        if (palet.PalletImportData != null)
                                        {
                                        <div style="position: absolute; bottom: 0; width: 95%;">
                                        <input type="button" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width:80%; min-height:40px; min-width: 30px; margin-top:5px; margin-bottom:5px; border-radius:5px; height:3vw; text-align:center" class="detailsBtn btn-info">
                                        </div> }
                                        else if (palet.PalletImportDataHistory != null)
                                        {
                                        <div style="position: absolute; bottom: 0; width: 95%;">

                                        <input type="button" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" style="width:3vw; min-height:40px; margin-top:5px; margin-bottom:5px; min-width: 30px; border-radius:5px; height:6vh; text-align:center" class="detailsBtn btn-info">
                                        </div>}
                                        else
                                        {
                                        <div style="position: absolute; bottom: 0; width: 95%;">
                                        <input type="button" data-consignee="" data-container="" data-sales="" data-palletno="" data-serialto="" data-serialfrom="" id="@palet.Id" data-orderno="" data-qty="" data-weight="" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top: 5px; margin-bottom: 5px; border-radius: 5px; min-height:40px; height:6vh;text-align: center" class="detailsBtn btn-info">
                                        </div>
                                        }
                                        <br />
                                        }
                                        </td>


                                        }*@
                                    else
                                    {
                                        <td style=" width:4vw; text-align:center; position:relative;height:75px; min-width: 40px;" align="center">
                                            @if (currentRow == 1)
                                            {
                                                <p style="font-size:25px;margin-bottom:0;">@colNo</p>
                                                colNo++;
                                            }

                                            @foreach (var palet in currentPallets)
                                            {
                                                <div style="height:7vh; min-height:55px; width:100%; "> </div>
                                            }
                                            <div style="position:absolute; bottom:0; width:100%!important;" align="center">

                                                @foreach (var palet in currentPallets)
                                                {
                                                    if (palet.PalletImportData != null)
                                                    {
                                                        if (palet.PalletImportData.serial_from == 0)
                                                        {
                                                            if (_context.PartCenterPallets.Any(c => /*c.Container_no == palet.PalletImportData.container_no &&*/ c.Destination == palet.PalletImportData.consignee_code && c.Pallet_number == palet.PalletImportData.pallet_no))
                                                            {
                                                                <input type="button" data-volume="@_context.PartCenterPallets.Where(c=>/*c.Container_no == palet.PalletImportData.container_no &&*/ c.Destination == palet.PalletImportData.consignee_code && c.Pallet_number == palet.PalletImportData.pallet_no).Select(c=>c.Volume).FirstOrDefault()" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px;height:6vh;text-align:center" class="detailsBtn btn-info">

                                                            }
                                                            else
                                                            {
                                                                <input type="button" data-volume="0" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px;height:6vh;text-align:center" class="detailsBtn btn-info">

                                                            }
                                                        }
                                                        else
                                                        {
                                                            <input type="button" data-volume="@palet.PalletImportData.volume" data-consignee="@palet.PalletImportData.consignee_code" data-container="@palet.PalletImportData.container_no" data-sales="@palet.PalletImportData.salse_part" data-palletno="@palet.PalletImportData.pallet_no" data-serialto="@palet.PalletImportData.serial_to" data-serialfrom="@palet.PalletImportData.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportData.picking_qty" data-weight="@palet.PalletImportData.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px;height:6vh;text-align:center" class="detailsBtn btn-info">

                                                        }
                                                    }
                                                    else if (palet.PalletImportDataHistory != null)
                                                    {
                                                        if (palet.PalletImportDataHistory.serial_from == 0)
                                                        {
                                                            if (_context.PartCenterPallets.Any(c => /*c.Container_no == palet.PalletImportDataHistory.container_no &&*/ c.Destination == palet.PalletImportDataHistory.consignee_code && c.Pallet_number == palet.PalletImportDataHistory.pallet_no))
                                                            {
                                                                <input type="button" data-volume="@_context.PartCenterPallets.Where(c=>/*c.Container_no == palet.PalletImportDataHistory.container_no &&*/ c.Destination == palet.PalletImportDataHistory.consignee_code && c.Pallet_number == palet.PalletImportDataHistory.pallet_no).Select(c=>c.Volume).FirstOrDefault()" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px;height:6vh;text-align:center" class="detailsBtn btn-info">

                                                            }
                                                            else
                                                            {
                                                                <input type="button" data-volume="0" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px;height:6vh;text-align:center" class="detailsBtn btn-info">


                                                            }
                                                        }
                                                        else
                                                        {
                                                            <input type="button" data-volume="@palet.PalletImportDataHistory.volume" data-consignee="@palet.PalletImportDataHistory.consignee_code" data-container="@palet.PalletImportDataHistory.container_no" data-sales="@palet.PalletImportDataHistory.salse_part" data-palletno="@palet.PalletImportDataHistory.pallet_no" data-serialto="@palet.PalletImportDataHistory.serial_to" data-serialfrom="@palet.PalletImportDataHistory.serial_from" id="@palet.Id" data-orderno="@palet.OrderNo" data-qty="@palet.PalletImportDataHistory.picking_qty" data-weight="@palet.PalletImportDataHistory.weight" value="@palet.OrderNo" style="width: 3vw; min-width: 30px; margin-top:5px; margin-bottom:5px;min-height:40px; border-radius:5px; height:6vh; text-align:center" class="detailsBtn btn-info">

                                                        }
                                                    }
                                                    else
                                                    {

                                                        <input type="button" data-volume="" data-sales="" data-palletno="" data-serialto="" data-serialfrom="" id="@palet.Id" data-orderno="" data-qty="" data-weight="" value="@palet.OrderNo" style="width: 3vw; margin-top:5px; margin-bottom:5px; min-height:40px; border-radius:5px; height:6vh; min-width: 30px; text-align:center" class="detailsBtn btn-info">

                                                    }
                                                }
                                            </div>

                                        </td>
                                    }
                                }
                            }
                            @{
                                currentRow++;
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    @* New Modal Elements *@
    @if (ViewBag.UserRightLevel > 1)
    {
        <div style="display: flex; justify-content: center; gap: 20px;">
            @if (ViewBag.SecuringLoadConfirmation == true)
            {
                <button type="button" class="btn btn-outline-dark btn-lg shadow-button confirmData" onclick="ShowSecuringLoadModal()">
                    Change Securing Load
                </button>
            }
            else
            {
                <button type="button" class="btn btn-outline-dark btn-lg shadow-button" onclick="ShowSecuringLoadModal()">
                    Change Securing Load
                </button>
            }
            <div>
                @if (ViewBag.LoadingTypeConfirmation == true)
                {
                    <select name="loadingType" id="loadingType" class="confirmData" style="font-size:33px;">
                        @foreach (var type in ViewBag.LoadingTypes)
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                }
                else
                {
                    <select name="loadingType" id="loadingType" style="font-size:33px;">
                        @foreach (var type in ViewBag.LoadingTypes)
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                }
            </div>
            @if (ViewBag.FormDefinitionConfirmation == true)
            {
                <button type="button" class="btn btn-outline-dark btn-lg shadow-button confirmData" onclick="ShowFormDefinitionModal()">
                    Change Form Definition
                </button>
            }
            else
            {
                <button type="button" class="btn btn-outline-dark btn-lg shadow-button" onclick="ShowFormDefinitionModal()">
                    Change Form Definition
                </button>
            }
        </div>
    }
   
   @*  <br />
    <div style="display: flex; justify-content: center; gap: 20px;">
        @if (ViewBag.OperatorSignatureValidation == true)
        {
            <a class="btn exportClass" type="button" asp-action="OperatorSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id" class="btn btn-danger">Operator Signature</a>
        }
        else
        {
            <a class="btn errorData" type="button" asp-action="OperatorSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id" class="btn btn-danger">Operator Signature</a>
        }
        
        @if (ViewBag.ForklifterSignatureValidation == true)
        {
            <a class="btn exportClass" type="button" asp-action="ForklifterSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id" class="btn btn-danger">Forklifter Signature</a>
        }
        else
        {
            <a class="btn errorData" type="button" asp-action="ForklifterSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id" class="btn btn-danger">Forklifter Signature</a>
        }
        
        @if (ViewBag.TeamLeaderSignatureValidation == true)
        {
            <a class="btn exportClass" type="button" asp-action="TeamLeaderSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id" class="btn btn-danger">Team Leader Signature</a>
        }
        else
        {
            <a class="btn errorData" type="button" asp-action="TeamLeaderSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id" class="btn btn-danger">Team Leader Signature</a>
        }

        @if (ViewBag.SupervisorSignatureValidation == true)
        {
            <a class="btn exportClass" type="button" asp-action="SupervisorSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id" class="btn btn-danger">Supervisor Signature</a>
        }
        else
        {
            <a class="btn errorData" type="button" asp-action="SupervisorSign" asp-controller="Containers2" asp-route-id="@Model.Container.Id" class="btn btn-danger">Supervisor Signature</a>
        }
    </div> *@


    <br />

    <br />


    <table class="table-bordered" border="1" width="50%" ; style="min-width:400px; box-shadow:0 10px 20px rgba(0,0,0,0.1), 0 6px 6px rgba(0,0,0,0.1); max-width:600px;  height:300px; border:2px solid" align="center">
        <tr style="background-color: antiquewhite; border:none; ">
            <td style="border:none;">

                <h3 style="text-align:center; background-color: antiquewhite; ">Pallet details</h3>

            </td>
        </tr>
        <tr style="border: none; ">
            <div align="center">
            <td style="background-color: antiquewhite; border:none;   text-align: center; padding: 50px 100px 50px 100px" id="palletContent">
                    @{
                        if (Model.Pallet != null)
                        {
                        <div align="left">
                                @Html.DisplayNameFor(model => model.Pallet.Name)
                            <span style="float:right">@Html.DisplayFor(model => model.Pallet.Name)</span>
                        </div>

                        <br />

                        <div align="left">
                                @Html.DisplayNameFor(model => model.Pallet.OrderNo)
                            <span style="float:right">@Html.DisplayFor(model => model.Pallet.OrderNo)</span>
                        </div>
                        }
                    }
            </td>
</div>
        </tr>
    </table>
<br />


<br />
    @if (Model.Pallets != null)
    {

    <div width="100%">
        <h2 align="center">Pallets details</h2>
        <table class='table' style="width:80%;" align="center">
            <tr>
                <th>Loading no</th>
                <th>Container</th>
                <th>Pallet no</th>
                <th>Sales part</th>
                <th>Serial from</th>
                <th>Serial to</th>
                <th>Quantity</th>
                <th>Weight</th>
                <th>Volume (mc3)</th>
            </tr>
                @foreach (var pallet in Model.ModelImportDataPccPallets.OrderBy(c => c.pallet.OrderNo))
                {
                    if (pallet.pallet.PalletImportData != null)
                    {
                    <tr>
                        <td>@pallet.pallet.OrderNo</td>
                        <td>@pallet.pallet.PalletImportData.consignee_code - @pallet.pallet.PalletImportData.container_no</td>
                        <td>@pallet.pallet.PalletImportData.pallet_no.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportData.salse_part</td>
                        <td>@pallet.pallet.PalletImportData.serial_from.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportData.serial_to.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportData.picking_qty.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportData.weight.ToString("G29")</td>
                            @if (@pallet.pallet.PalletImportData.serial_from == 0)
                            {
                                @if (pallet.PartCenterPallets != null)
                                {
                                <td>@pallet.PartCenterPallets.Volume</td>
                                }
                                else
                                {
                                <td>0</td>
                                }
                            }
                            else
                            {
                            <td>@((pallet.pallet.PalletImportData.volume * pallet.pallet.PalletImportData.picking_qty).ToString("N2"))</td>

                            }

                    </tr>
                    }
                    else if (pallet.pallet.PalletImportDataHistory != null)
                    {
                    <tr>
                        <td>@pallet.pallet.OrderNo</td>
                        <td>@pallet.pallet.PalletImportDataHistory.consignee_code - @pallet.pallet.PalletImportDataHistory.container_no</td>
                        <td>@pallet.pallet.PalletImportDataHistory.pallet_no.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportDataHistory.salse_part</td>
                        <td>@pallet.pallet.PalletImportDataHistory.serial_from.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportDataHistory.serial_to.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportDataHistory.picking_qty.ToString("G29")</td>
                        <td>@pallet.pallet.PalletImportDataHistory.weight.ToString("G29")</td>
                            @if (pallet.pallet.PalletImportDataHistory.serial_from == 0)
                            {
                                @if (pallet.PartCenterPalletsHistory != null)
                                {
                                <td>@pallet.PartCenterPalletsHistory.Volume.ToString("G29")</td>
                                }
                                else
                                {
                                <td>0</td>
                                }
                            }
                            else
                            {
                            <td>@((pallet.pallet.PalletImportDataHistory.volume * pallet.pallet.PalletImportDataHistory.picking_qty).ToString("N2"))</td>

                            }

                    </tr>
                    }
                }
        </table>
    </div>

    <div class="modal fade modalClassSecuringLoad" id="selectSecuringLoadModal" role="dialog">
        <div class="modal-dialog" id="selectSecuringLoadModalDialog">
            <!-- Modal content in partial view-->
        </div>
    </div>

    <div class="modal fade modalClassFormDefinition" id="selectFormDefinitionModal" role="dialog">
        <div class="modal-dialog modal-large" id="selectFormDefinitionModalDialog">
            <!-- Modal content in partial view-->
        </div>
    </div>

    }



    @section Scripts {
<script>

    // Wait for the document to be fully loaded
    document.addEventListener('DOMContentLoaded', function () {
        // Get the <select> element
        var selectElement = document.getElementById('loadingType');

        // Set the second option as selected (index 1)
        var selectedLoadType = $("#selectedLoadType").val();
        selectElement.selectedIndex = selectedLoadType;
    });



    @*$(".detailsBtn").click(function () {
                                                                var palletId = this.id;
                                                                var idContainer = $('#container').val();
                                                                var path = '@Url.Action("Details")' + "?id=" + idContainer + "&pallet=" + palletId;
                                                                window.location.href = path;
                                                            });*@

        $("#exportPDF").click(function () {
            var idContainer = $('#container').val();
            var path = '@Url.Action("CreateDocument")' + "?idContainer=" + idContainer;
            window.location.href = path;
        });

    $(".detailsBtn").click(function () {
        var palletId = this.id;
        var tmpVolume = ($(this).attr("data-volume") * $(this).attr("data-qty")).toFixed(2);
        console.log($(this).attr("data-serialfrom") + " " +$(this).attr("data-volume"))
        if($(this).attr("data-serialfrom") == "0.00"){
         tmpVolume = $(this).attr("data-volume") ;

        }

        var palletTxt = "<div align='left'> <span style='float:left;font-weight:bold;'>Loading no:</span> <span style='float: right'> " + $(this).attr("data-orderNo") + "</span></div ></br> "
            + "<div align='left'><span style='float:left;font-weight:bold;'> Container:</span> <span style='float: right'> " + $(this).attr("data-consignee") + ' - ' + $(this).attr("data-container") + "</span></div></br>"
            + "<div align='left'><span style='float:left;font-weight:bold;'> Sales part:</span> <span style='float: right'> " + $(this).attr("data-sales") + "</span></div></br>"
            + "<div align='left'> <span style='float:left;font-weight:bold;'>Pallet no:</span> <span style='float: right'> " + $(this).attr("data-palletno") + "</span></div ></br> "
            + "<div align='left'><span style='float:left;font-weight:bold;'> Serial from:</span> <span style='float: right'> " + $(this).attr("data-serialfrom") + "</span></div > </br>"
            + "<div align='left'> <span style='float:left;font-weight:bold;'>Serial to:</span> <span style='float: right'> " + $(this).attr("data-serialto") + "</span></div > </br>"
            + "<div align='left'><span style='float:left;font-weight:bold;'> Quantity: </span><span style='float: right'> " + $(this).attr("data-qty") + "</span></div ></br> "
            + "<div align='left'><span style='float:left;font-weight:bold;'> Weight: </span><span style='float: right'> " + $(this).attr("data-weight") + "</span></div > </br>"
            + "<div align='left'><span style='float:left;font-weight:bold;'> Volume: </span><span style='float: right'> " + tmpVolume + "</span></div > </br>"
        $("#palletContent").empty();
        $("#palletContent").append(palletTxt)
        //console.log($(this).attr("data-serialto"))
    });


    function ShowSecuringLoadModal(id) 
    {
            // Construct the URL with the id parameter
            var containerId = $("#containerId").val();
            var url = "@Url.Action("ShowSelectSecuringLoadModal", "Containers2")" + "?id1=" + containerId;

            $.get(url, function (data)
            {
                $("#selectSecuringLoadModalDialog").html(data);
            });

        $("#selectSecuringLoadModal").modal("show");
    }



    // Handle dropdown change event
    document.getElementById('loadingType').addEventListener('change', function () {
        var selectedType = this.value;
        var containerId = $("#containerId").val();

        // Make an AJAX call to the controller function
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ChangeLoadingType", "Containers2")',
            data: { containerId: containerId, selectedType: selectedType },
            dataType: "json", // Expect JSON response
            success: function (data) {
                // Handle success (e.g., show a message)
                //alert('Loading type saved successfully!');
                window.location.href = '/Containers2/Details?id=' + containerId;
            },
            error: function () {
                // Handle error (e.g., show an error message)
                //alert('Error saving loading type.');
            }
        });
    });


        function ShowFormDefinitionModal(id) {
            // Construct the URL with the id parameter
            var containerId = $("#containerId").val();
            console.log('error1');
            var url = "@Url.Action("ShowFormDefinitionModal", "Containers2")" + "?id1=" + containerId;
            console.log('error2');

            $.get(url, function (data) {
                console.log('error3');
                $("#selectFormDefinitionModalDialog").html(data);
            });

            $("#selectFormDefinitionModal").modal("show");
        }


</script>
    }

